
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;

    # 默认文件类型
    default_type  application/octet-stream;

    # 开启高效传输模式
    sendfile        on;

    # 减少网络报文段的数量
    tcp_nopush          on;
    tcp_nodelay         on;

    # 保持连接的时间，也叫超时时间，单位秒
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
	# 前端独立部署配置
	server {
	    listen 8080;
	    server_name localhost;
        charset utf-8;
	    gzip  on; 
        gzip_min_length 1k;
        # Nginx访问日志存放位置
        access_log  /usr/local/var/log/nginx/xxx.com.access.log main;  
        error_log   /usr/local/var/log/nginx/xxx.com.error.log ;  
        # web-spa server
        location / {
            # 网站根目录
            root /home/web/dist;

            # 默认首页文件
            index index.html ;
            try_files $uri $uri/ /index.html;

            # 首页一般没有强制缓存
            expires -1;                          
            add_header Cache-Control no-cache;

            deny 172.168.22.11;  # 禁止访问的ip地址，可以为all
            allow 172.168.33.44; # 允许访问的ip地址，可以为all
        }

        # 图片防盗链
        # location ~* \.(png|gif|jpg|jpeg)$ {
        #     valid_referers none blocked 192.168.0.2;  # 只允许本机 IP 外链引用
        #     if ($invalid_referer){
        #         return 403;
        #     }
        # }
        
        # api 反向代理
        location ~ ^/api {
            proxy_pass                   http://xxxx.com;
            # 获取代理时真实的请求
            proxy_set_header Host        $host;
            proxy_set_header X-Real-IP   $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
	}
}

